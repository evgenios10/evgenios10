Ξεκινωντας χρησιμοποιησα atoi για εισαγωγη αριθμων απο το πληκτρολογιο, ορισα μια σταθερα MAX 100000000
ετσι ωστε να την χρησιμοποιησω για να φτιαξω τον πινακα mikos_found[MAX] και τον αρχικοποιησα με μηδενικα,
ενω δημιουργησα την συναρτηση  mikoscollatz(int N) για να υπολογιζω το μηκος της διαδικασιας κολλατζ καθε για
καθε Ν. Οταν υπολογιζοταν το μηκος του εκαστωτε Ν (το οποιο φροντισα να αποθηκευω σε μια μεταβλητη checking_N πριν
γινει 1 μεσω της διαδικασιας κολλατζ), στο τελος αποηθηκευα το μηκος της διαδικασιας κολλατζ  που βρηκα για τον Ν 
στην θεση Ν του πινακα mikos_found[MAX], για σκοπους βελτιστοποιησης της αποδοσης ετσι ωστε αν χρειαστει η συναρτηση
να ξαναυπολογισει το μηκος αυτου του Ν στο μελλον, περναει απο τον ελεγχο if (mikos_found[N] > 0) δηλαδη αν στην θεση Ν 
δεν υπαρχει η τιμη 0 τοτε η τιμη που υπαρχει ειναι το μηκος της κολλατζ διαδικασιασ αυτου του αριθμου που εχει ηδη γινει,
και θα το παιρνει ετοιμο χωρις να ξαναχρειαστει να εκτελεσει τη διαδικασια κολλατζ.Στην main χρησιμοποιησα unsigned int 
μεταβλητες για τους αριθμους μου λογω του οτι μπορει να ειναι πολυ μεγαλοι, δημιουρησα την μεταβλητη max την οποια
αρχικοποιησα με 0,και την  mikos στην οποια αποθηκευω το μηκος που περνω απο την κληση της συναρτησης mikoscollatz.
Εβαλα ενα βροχο for που δινει τιμες στο Ν απο first μεχρι last, μεσα στο φορ το μηκος σε καθε λουπα καλει την συναρτηση
mikoscollatz περνει την τιμη και την συγκρινει με το max αν ειναι μεγαλυτερη τοτε το max περνει την τιμη του mikos 
Τελος τυπωνω το τελικο max που θα ειναι και το μεγαλυτερο που εχει βρεθει

